library(ncdf4)
library(ggplot2)
library(EFDR)
# # library(landsat)
# source("slopeasp_RC.R")
# source("movingwindow_RC.R")
# library(sp)
library(insol)


file = 'J:/Chpt_3/GEBCO/gebco_2021_n44.0_s24.0_w-82.0_e-63.0.nc'
ncid = nc_open(file)

elev = t(ncvar_get(ncid,'elevation'))
lat = ncvar_get(ncid,'lat')
lon = ncvar_get(ncid,'lon')

## insol library approach
g = cgrad(elev,dlx=0.00416666,dly=0.00416666)
floorSlope = slope(g,degrees=TRUE)
floorAspect = aspect(g,degrees=TRUE)



## landsat library approach (incredibly slow with big data!)
# elev = data.frame(t(ncvar_get(ncid,'elevation')))
# lat = ncvar_get(ncid,'lat')
# lon = ncvar_get(ncid,'lon')
# elDF = data.frame(data=stack(elev)[,1],
#                     lat=rep(lat,length.out=length(lon)*length(lat)),
#                   lon=rep(lon,each=length(lat)))
# # ggplot(elDF,aes(x=x,y=y))+geom_tile(aes(fill=z))
# 
# # Convert to a SpatialPointsDataFrame
# coordinates(elDF) = ~lat+lon
# proj4string(elDF) = CRS('+proj=longlat +datum=WGS84 +units=m')
# 
# # Source: https://stackoverflow.com/questions/64380342/turn-spatialpointsdataframe-to-spatialgriddataframe
# # Transform to a SpatialPixelsDataFrame
# SGDF = as(elDF,'SpatialPixelsDataFrame')
# # Transform to a SpatialGridDataFrame
# SGDF = as(SGDF,'SpatialGridDataFrame')
# 
# # Calculate slope and aspect
# SA = slopeasp_RC(SGDF)
# 
# slope = matrix(unlist(SA$slope$data),ncol=length(lon),byrow=TRUE)
# aspect = matrix(unlist(SA$aspect$data),ncol=length(lon),byrow=TRUE)
# 
# slopeDF = data.frame(data=stack(data.frame(slope))[,1],
#                      lat=rep(lat,length.out=length(lon)*length(lat)),
#                      lon=rep(lon,each=length(lat)))
# # ggplot(slopeDF,aes(x=lon,y=lat))+geom_tile(aes(fill=data))
# aspectDF = data.frame(data=stack(data.frame(aspect))[,1],
#                      lat=rep(lat,length.out=length(lon)*length(lat)),
#                      lon=rep(lon,each=length(lat)))
# # ggplot(aspectDF,aes(x=lon,y=lat))+geom_tile(aes(fill=data))

